// Build.Gradle : example of use in project
// the project layout ...
// etc...

plugins {
    id 'aardephant'
}
// apply our plugin.
apply plugin: 'aardephant'

task build {
     dependsOn(':libraries:build')
     dependsOn('verify')
}

task install {
     dependsOn(':libraries:build')
     dependsOn('upload')
}

task clean {
     delete project.buildDir
}
task verify (type: ArduinoVerify) {
     vidPid = '239A_800C' // move to system Property??
     ideVersion = '10813' // move to system Property??

     // how chatty the compiler needs to be.
     warnings = 'none'     // 'none', 'default', 'more' and 'all'
     // used for debugging
     verbose = false
     // used for debugging
     trace = false
     // used for debugging ( 0 to 5, or to exclude entirely -1
     debugLevel = -1     

     // OS Dependent (paths)
     def osName = System.properties['os.name'].toLowerCase(Locale.ROOT)
     def avrPath
     if (osName.contains('windows')) {
          libraries = [ sketchBookFolder + '\\libraries\\', '..\\..\\..\\libraries\\' ]
          avrPath = System.getProperty("arduino.bin.path") + '\\hardware\\tools\\avr\\'
     } else if (osName.contains('linux')) {
          libraries = [ sketchBookFolder + '/libraries/', '../../../libraries/' ]
          avrPath = System.getProperty("arduino.bin.path") + '/hardware/tools/avr/'
     } else {
          libraries = [ sketchBookFolder + '/libraries/', '../../../libraries/' ]
          avrPath = System.getProperty("arduino.bin.path") + '/hardware/tools/avr/'
     }

     // END OS Dependent (paths)

     Map<String, String> prefMap = [
          'build.warn_data_percentage':'75', 
          'runtime.tools.arduinoOTA.path': avrPath, 
          'runtime.tools.arduinoOTA-1.3.0.path': avrPath,
          'runtime.tools.avr-gcc.path': avrPath,
          'runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path': avrPath,
          'runtime.tools.avrdude.path':avrPath,
          'runtime.tools.avrdude-6.3.0-arduino17.path': avrPath
     ]
     prefs = prefMap
}


task upload (type: ArduinoUpload) {
     dependsOn(':applications:Microcode:af_32u4:verify')
     
     vidPid = '239A_800C' // move to system Property??
     ideVersion = '10813' // move to system Property??

     // how chatty the compiler needs to be.
     warnings = 'none'     // 'none', 'default', 'more' and 'all'
     // used for debugging
     verbose = true
     // used for debugging
     trace = true 
     // used for debugging ( 0 to 5, or to exclude entirely -1
     debugLevel = 1     

     portName =  System.getProperty("arudino.portName")

     // OS Dependent (paths)
     def osName = System.properties['os.name'].toLowerCase(Locale.ROOT)
     def avrPath
     if (osName.contains('windows')) {
          libraries = [ sketchBookFolder + '\\libraries\\',
                        '..\\..\\libraries\\' ]
          avrPath = System.getProperty("arduino.bin.path") + '\\hardware\\tools\\avr\\'
     } else if (osName.contains('linux')) {
          libraries = [ sketchBookFolder + '/libraries/',
                        '../../libraries/' ]
          avrPath = System.getProperty("arduino.bin.path") + '/hardware/tools/avr/'
     } else {
          libraries = [ sketchBookFolder + '/libraries/',
                        '../../libraries/' ]
          avrPath = System.getProperty("arduino.bin.path") + '/hardware/tools/avr/'
     }

     // END OS Dependent (paths)

     Map<String, String> prefMap = [
          'build.warn_data_percentage':'75', 
          'runtime.tools.arduinoOTA.path': avrPath, 
          'runtime.tools.arduinoOTA-1.3.0.path': avrPath,
          'runtime.tools.avr-gcc.path': avrPath,
          'runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path': avrPath,
          'runtime.tools.avrdude.path':avrPath,
          'runtime.tools.avrdude-6.3.0-arduino17.path': avrPath
     ]
     prefs = prefMap

}